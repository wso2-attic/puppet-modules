# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
classes:
  - wso2greg_pubstore

wso2::pack_filename: "wso2greg-%{::product_version}.zip"
wso2::pack_extracted_dir: "wso2greg-%{::product_version}"
wso2::carbon_home_symlink: "/mnt/wso2greg-%{::product_version}"

wso2::datasources::common::bps_default_auto_commit: 'true'

wso2::service_name: wso2greg_pubstore
wso2::hostname: wso2greg_pubstore-default
wso2::mgt_hostname: wso2greg_pubstore-default

wso2::clustering:
  enabled: true
  membership_scheme: kubernetes
  local_member_port: 4000
  kubernetes:
    kubernetes_namespace: default
    kubernetes_services: wso2greg_pubstore-default

wso2::template_list:
  - repository/conf/identity.xml
  - repository/conf/datasources/social-datasources.xml
  - repository/conf/datasources/bps-datasources.xml
  - repository/conf/identity/sso-idp-config.xml
  - repository/conf/identity/application-authentication.xml
  - repository/conf/api-manager.xml
  - repository/deployment/server/jaggeryapps/store/config/store.json
  - repository/deployment/server/jaggeryapps/store/config/store-tenant.json
  - repository/deployment/server/jaggeryapps/publisher/config/publisher.json
#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/cipher-tool.properties
#  - bin/ciphertool.sh

wso2::apim_gateway:
  host: am.dev.wso2.org
  port: 9443
  api_endpoint_host: am.dev.wso2.org
  api_endpoint_port: 8280
  secure_api_endpoint_port: 8243
  api_token_revoke_endpoint_port: 8280
  secure_api_token_revoke_endpoint_port: 8243
  username: "%{hiera('wso2::super_admin::username')}"
  password: "%{hiera('wso2::super_admin::password')}"

wso2::apim_keymanager:
  host: am.dev.wso2.org
  port: 9443
  username: "%{hiera('wso2::super_admin::username')}"
  password: "%{hiera('wso2::super_admin::password')}"

wso2::enableThriftServer: false


# In Kubernetes proxy ports need to be configured to match with node ports.
# Following ports have been defined for servlet HTTP and HTTPS transports.
wso2::ports:
  proxyPort:
    http: 32101
    https: 32102

wso2::service_provider:
  store:
    issuer: store
    acs: https://wso2greg_pubstore-default:32102/store/acs
  social:
    issuer: social
    acs: https://wso2greg_pubstore-default:32102/social/acs
  publisher:
    issuer: publisher
    acs: https://wso2greg_pubstore-default:32102/publisher/acs

wso2::identity_provider:
  store:
    issuer: store
    identity_provider_url: https://wso2greg_pubstore-default:32102/samlsso
  publisher:
    issuer: publisher
    identity_provider_url: https://wso2greg_pubstore-default:32102/samlsso

wso2::social_app_url: https://wso2es-default:32102/social

wso2::usermgt_datasource: wso2_user_db
wso2::is_datasource: wso2_gov_db

wso2::master_datasources:
  wso2am_db:
    name: WSO2AM_DB
    description: The datasource used for API Manager database
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-gregdb:3306/APIM_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2AM_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

  wso2_config_db:
    name: WSO2_CONFIG_DB
    description: The datasource used for config registry
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-gregdb:3306/WSO2_GREG_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2_CONFIG_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

  wso2_gov_db:
    name: WSO2_GOV_DB
    description: The datasource used for gov registry
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-govdb:3306/WSO2_GOV_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2_GOV_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

  wso2_user_db:
    name: WSO2USER_DB
    description: The datasource is used for user mangement and userstore
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-userdb:3306/WSO2_USER_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2USER_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

wso2::social_datasources:
  wso2_social_db:
    name: WSO2_SOCIAL_DB
    description: The datasource used for social framework
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-gregdb:3306/WSO2_GREG_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: jdbc/WSO2_SOCIAL_DB
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

wso2::bps_datasources:
  bps_ds:
    name: BPS_DS
    description: The datasource used for BPS database
    driver_class_name: "%{hiera('wso2::datasources::mysql::driver_class_name')}"
    url: jdbc:mysql://mysql-gregdb:3306/WSO2_GREG_DB?autoReconnect=true
    username: "%{hiera('wso2::datasources::mysql::username')}"
    password: "%{hiera('wso2::datasources::mysql::password')}"
    jndi_config: bpsds
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::bps_default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

wso2::registry_mounts:
  wso2_config_db:
    path: /_system/config
    target_path: /_system/config/greg
    read_only: false
    registry_root: /
    enable_cache: true

  wso2_gov_db:
    path: /_system/governance
    target_path: /_system/governance
    read_only: false
    registry_root: /
    enable_cache: true

# Secure vault configuration
#wso2::enable_secure_vault: true
#wso2::secure_vault_configs:
#  key_store_password:
#    secret_alias: Carbon.Security.KeyStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
#
#  key_store_key_password:
#    secret_alias: Carbon.Security.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::key_store::key_password')}"
#
#  trust_store_password:
#    secret_alias: Carbon.Security.TrustStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/TrustStore/Password,false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  user_manager_admin_password:
#    secret_alias: UserManager.AdminUser.Password
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/Configuration/AdminUser/Password,false
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  api_gateway_password:
#    secret_alias: APIGateway.Password
#    secret_alias_value: repository/conf/api-manager.xml//APIManager/APIGateway/Environments/Environment/Password,false
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  api_key_validator_password:
#    secret_alias: APIKeyValidator.Password
#    secret_alias_value: repository/conf/api-manager.xml//APIManager/APIKeyValidator/Password,false
#    password: "%{hiera('wso2::super_admin::password')}"
#
#  wso2_carbon_db_password:
#    secret_alias: Datasources.WSO2_CARBON_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CARBON_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::common::password')}"
#
#  connector_key_store_password:
#    secret_alias: Server.Service.Connector.keystorePass
#    secret_alias_value: repository/conf/tomcat/catalina-server.xml//Server/Service/Connector[@keystorePass],true
#    password: "%{hiera('wso2::key_stores::connector_key_store::password')}"
#
#  wso2_social_db_password:
#    secret_alias: Datasources.WSO2_SOCIAL_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/social-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_SOCIAL_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  bps_ds_db_password:
#    secret_alias: Datasources.BPS_DS.Configuration.Password
#    secret_alias_value: repository/conf/datasources/bps-datasources.xml//datasources-configuration/datasources/datasource[name='BPS_DS']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2am_db_password:
#    secret_alias: Datasource.WSO2AM_DB.configuration.password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2AM_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2_config_db_password:
#    secret_alias: Datasources.WSO2_CONFIG_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CONFIG_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2_gov_db_password:
#    secret_alias: Datasources.WSO2_GOV_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_GOV_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  wso2_user_db_password:
#    secret_alias: Datasources.WSO2USER_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2USER_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#
#  xmpp_password:
#    secret_alias: MultifactorAuthentication.XMPPSettings.XMPPConfig.XMPPPassword
#    secret_alias_value: repository/conf/identity.xml//MultifactorAuthentication/XMPPSettings/XMPPConfig/XMPPPassword,false
#    password: wso2carbon
#
#  user_trusted_RPStore_password:
#    secret_alias: Security.UserTrustedRPStore.Password
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/Password,false
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::password')}"
#
#  user_trusted_RPStore_key_password:
#    secret_alias: Security.UserTrustedRPStore.KeyPassword
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/KeyPassword,false
#    password: "%{hiera('wso2::key_stores::user_trusted_rp_store::key_password')}"
#
#  authenticator_config_trust_store_password:
#    secret_alias: AuthenticatorConfig.TrustStore.Password
#    secret_alias_value: repository/conf/identity/application-authentication.xml//ApplicationAuthentication/AuthenticatorConfigs/AuthenticatorConfig[@name='OpenIDAuthenticator']/Parameter[@name='TrustStorePassword'],false
#    password: "%{hiera('wso2::key_stores::trust_store::password')}"
#
#  dep_sync_svn_password:
#    secret_alias: Carbon.DeploymentSynchronizer.SvnPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/DeploymentSynchronizer/SvnPassword,true
#    password: password
#
#  thrift_based_entitlement_config_key_store_password:
#    secret_alias: ThirftBasedEntitlementConfig.KeyStore.Password
#    secret_alias_value: repository/conf/identity.xml//Server/EntitlementSettings/ThirftBasedEntitlementConfig/KeyStore/Password,false
#    password: "%{hiera('wso2::key_stores::key_store::password')}"
